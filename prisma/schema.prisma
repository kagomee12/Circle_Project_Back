// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  username String @unique
  fullName String
  email String 
  password String
  profil_pic String?
  banner_pic String?
  bio String?

  post Posts[] 
  likes Likes[] @relation("likes")
  following  Follow[] @relation("following")
  followers  Follow[] @relation("followers")
}

model Posts {
  id Int @id @default(autoincrement())
  content String
  createdAt DateTime @default(now())
  user_id Int
  parent_id Int?

  post Posts? @relation("PostReplies", fields: [parent_id], references: [id])
  comments Posts[] @relation("PostReplies")
  author User @relation(fields: [user_id], references: [id])
  images   PostImage[]
  likes    Likes[] @relation("likesPost")
}
 
model PostImage {
  id Int @id @default(autoincrement())
  image String
  post_id Int
  post Posts @relation(fields: [post_id], references: [id])

}

model Likes {
  id Int @id @default(autoincrement())
  user_id Int
  post_id Int
  like_user User @relation("likes",fields: [user_id], references: [id])
  like_post Posts @relation("likesPost",fields: [post_id], references: [id])
}

model Follow {
  id          Int   @id @default(autoincrement())
  followerId  Int
  followingId Int
  followers    User  @relation("followers", fields: [followerId], references: [id])
  following   User  @relation("following", fields: [followingId], references: [id])

}
// datasource db {
//   provider = "postgresql"
//   url      = env("DATABASE_URL")
// }

// generator client {
//   provider = "prisma-client-js"
// }

// model User {
//   id          Int      @id @default(autoincrement())
//   username    String   @unique
//   password    String
//   profile_pic String?

//   posts       Post[]
//   likes       Like[]
//   following   Follow[] @relation("following")
//   followers   Follow[] @relation("followers")
// }

// model Post {
//   id       Int      @id @default(autoincrement())
//   title    String
//   body     String?
//   userId   Int
//   parentId Int?

//   post     Post?     @relation("PostReplies", fields: [parentId], references: [id])
//   comments Post[]    @relation("PostReplies")
//   author   User      @relation(fields: [userId], references: [id])
//   images   PostImage[]
//   likes    Like[]
// }

// model PostImage {
//   id     Int   @id @default(autoincrement())
//   image  String
//   postId Int
//   post   Post  @relation(fields: [postId], references: [id])
// }

// model Like {
//   id     Int   @id @default(autoincrement())
//   userId Int
//   postId Int
//   user   User  @relation(fields: [userId], references: [id])
//   post   Post  @relation(fields: [postId], references: [id])

//   @@unique([userId, postId])
// }

// model Follow {
//   id          Int   @id @default(autoincrement())
//   followerId  Int
//   followingId Int
//   follower    User  @relation("followers", fields: [followerId], references: [id])
//   following   User  @relation("following", fields: [followingId], references: [id])

//   @@unique([followerId, followingId])
// }

